name:  Chaincode CI

on:
  push:
    branches: [ main ]
    paths:
      - 'chaincode/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'chaincode/**'

jobs:
  verify-chaincode:
    runs-on: ubuntu-latest
    steps:
    # Check out the code from the repository
    - uses: actions/checkout@v2

    # Set up Node.js environment with version 14
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    # Install chaincode dependencies using npm
    - name: Install dependencies
      working-directory: ./chaincode
      run: npm install

    # Verify Node.js setup by running a simple Node.js command
    - name: Verify Node.js setup
      working-directory: ./chaincode
      run: node -e "console.log('Chaincode setup verified')"

    # Check for syntax errors in the waterDonation.js and lint JSON files
    - name: Check for syntax errors
      working-directory: ./chaincode
      run: | 
        node --check lib/waterDonation.js
        npm run lint:json

    # Run unit tests for the chaincode which checks for function name CreateDonation and QueryDonation 
    - name: Run unit tests
      working-directory: ./chaincode
      run: npm test

   
    
    # Setting up Hyperledger Fabric Environment    
    - name: Set up Fabric
      run: |
        curl -sSL https://bit.ly/2ysbOFE | bash -s -- 2.2.0 1.4.9
        export PATH=$PATH:$PWD/fabric-samples/bin
        export FABRIC_CFG_PATH=$PWD/fabric-samples/config
    
    # Basic integration test for chaincode
    - name: Run basic integration test
      working-directory: ./chaincode
      run: |
        # Create a test network
        cd ../fabric-samples/test-network
        ./network.sh up createChannel -ca -c mychannel -s couchdb

        #Add Org3 to test network
        cd ../test-network/addOrg3
        ./addOrg3.sh up

        # Back to test network
        cd ..
        
        # Deploy the chaincode
        ./network.sh deployCC -ccn water_donation -ccv 1.0 -ccp ../../chaincode -ccl javascript -cccg ../../chaincode/collections_config.json -ccep "OR('Org1MSP.member','Org2MSP.member','Org3MSP.member')"



        # Export ENV Variables for Org3
        export CORE_PEER_TLS_ENABLED=true 
        export CORE_PEER_LOCALMSPID="Org3MSP" 
        export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt 
        export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp 
        export CORE_PEER_ADDRESS=localhost:11051 
        export PATH=${PWD}/../bin:$PATH 
        export FABRIC_CFG_PATH=$PWD/../config/

        # Clean up
        # ./network.sh down